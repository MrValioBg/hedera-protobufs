syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2023 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

import "basic_types.proto";

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.state.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

/**
 * First-draft representation of a Hedera Token Service Fast-copyable CustomFee
 *
 * As with all network entities, account has an unique entity number represented as shard.realm.X.
 * X can be an alias public key or an EVM address or a number.
 *
 */
message TokenCustomFee {
    FeeType fee_type = 1;
    int64 fee_collector = 2;
    bool all_collectors_exempt = 3;
    TokenFixedFee fixed_fee = 4;
    TokenFractionalFee fractional_fee = 5;
    TokenRoyaltyFee royalty_fee = 6;
}

message TokenFixedFee {
    /**
     * Number of hbar or token units to collect for fixed fee.
     */
    int64 units_to_collect = 1;
    /**
     *
     */
    int64 token_denomination = 2;
}

message TokenFractionalFee {
    int64 numerator = 1;
    int64 denominator = 2;
    int64 min_units_to_collect = 3;
    int64 max_units_to_collect = 4;
    bool net_of_transfers = 5;
}

message TokenRoyaltyFee {
      int64 numerator = 1;
      int64 denominator = 2;
      TokenFixedFee fall_back_fee = 3;
}

enum FeeType {
  FRACTIONAL_FEE = 0;
  FIXED_FEE = 1;
  ROYALTY_FEE = 2;
}